services:
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    command:
      --api.insecure=true
      --providers.docker
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverse-proxy.rule=Host(`traefik.localhost`)"
    ports:
      # Traefik
      - "80:80"
      # Dashboard
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  
  webapi:
    image: instructionrag
    container_name: webapi
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapi.rule=Host(`api.localhost`)"
      - "traefik.http.services.webapi.loadbalancer.server.port=80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - HTTP_PORTS=${HTTP_PORT}
    #ports:
      #- ${HOST_HTTP_PORT}:${HTTP_PORT}
       
  database:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - ${HOST_DB_PORT}:${DB_PORT}